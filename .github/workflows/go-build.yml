name: golang-pipeline
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: go Build
        run: go mod download ; go build .
        env:
          GOARCH: amd64
          GOOS: linux
          EXTRA_FILES: "LICENSE"

      - name: zip artifact
        run: tar -cvzf jwt.tgz jwt

      - name: Create Release
        id: create_release
        uses: go-semantic-release/action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          force-bump-patch-version: "true"
          changelog-generator-opt: "emojis=true"

      - name: Gets latest created release info
        id: latest_release_info
        uses: jossef/action-latest-release-info@v1.1.0
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          # This pulls from the CREATE RELEASE step above,
          # referencing it's ID to get its outputs object,
          # which include a `upload_url`.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./jwt.tgz
          asset_name: jwt.tgz
          asset_content_type: application/zip